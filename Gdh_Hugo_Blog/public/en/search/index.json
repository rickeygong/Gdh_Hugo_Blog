[{"content":"Today, I suddenly thought about which phones I have used and decided to write them down briefly.\n2008 Nokia 6120CI\n2013 中兴 V880\n2013 华为 T8830\n2015 iPhone 5S\n2017 小米 MAX2\n2018 小米 8SE\n2020 红米 K30Pro\n2021 iPhone 12\n2024 iPhone 15Pro\n","date":"2024-11-11T13:05:12+08:00","image":"http://localhost:1313/post/images/Casual-notes-logo.png","permalink":"http://localhost:1313/en/p/casual-notes-mobile-memoir/","title":"Mobile Memoir"},{"content":"Brief Description\rNPM, short for Node Package Manager, is a tool for managing and sharing JavaScript code packages. It is the default package manager for the Node.js platform, allowing developers to download and install various JavaScript packages and tools from the NPM repository. With NPM, developers can easily find, install, update, and remove dependencies, making the development and maintenance of JavaScript projects more efficient and convenient.\nIn addition to installing and managing packages, NPM also offers other features, such as publishing your own packages to the NPM repository, managing project dependencies, and running script commands. Developers can use NPM to build and manage their JavaScript projects and share their code with other developers.\nOverall, NPM is a powerful tool that provides convenient package management functions for the JavaScript community, facilitating collaboration and knowledge sharing among developers.\nExample 1\rI have briefly experienced the example.\nThis example is very simple; it uses the NPM command to generate a few predefined folders.\nStart Coding\rNode.js\rP.S: Ensure that Node.js is installed in the environment.\nCreate and enter the folder\r1 2 3 mkdir FolderCreator cd FolderCreator Initialize the npm project\r1 2 npm init -y npm init -y is a command used to quickly generate a package.json file for a project. In this command, npm init initializes a new Node.js project, while the -yflag indicates that default values should be used during the initialization process, eliminating the need for user input. Specifically, executing npm init -y automatically creates a default package.json file that contains some basic information, such as the project name, version number, author, and more. This allows for a quick setup of a simple project structure without having to answer various questions posed by npm init. Using the npm init -y command can save time, especially when creating temporary or experimental projects. Developers can then make manual adjustments and configurations as needed.\nCreate and edit the script file\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #!/usr/bin/env node const fs = require(\u0026#39;fs\u0026#39;); const path = require(\u0026#39;path\u0026#39;); const folders = [ \u0026#39;10 项目管理/10-01 要件定义\u0026#39;, \u0026#39;10 项目管理/10-02 要件定义交付\u0026#39;, \u0026#39;10 项目管理/10-03 项目主计划\u0026#39;, \u0026#39;10 项目管理/10-04 项目周报\u0026#39;, \u0026#39;10 项目管理/10-05 会议纪要\u0026#39;, \u0026#39;20 业务调研及要件定义/20-01 调研计划\u0026#39;, \u0026#39;20 业务调研及要件定义/20-02 调研会议资料\u0026#39;, \u0026#39;20 业务调研及要件定义/20-03 调研会议会议纪要\u0026#39;, \u0026#39;20 业务调研及要件定义/20-04 业务需求分析\u0026#39;, \u0026#39;20 业务调研及要件定义/20-05 业务蓝图\u0026#39;, \u0026#39;20 业务调研及要件定义/20-06 课题研讨\u0026#39;, \u0026#39;20 业务调研及要件定义/20-07 功能设计/历史版本\u0026#39;, \u0026#39;30 技术概要及详细设计\u0026#39;, \u0026#39;40 系统测试和培训/40-01 系统测试\u0026#39;, \u0026#39;40 系统测试和培训/40-02 用户培训\u0026#39;, \u0026#39;50 系统上线/50-01 系统切换方案\u0026#39;, \u0026#39;50 系统上线/50-02 用户及权限配置\u0026#39;, \u0026#39;50 系统上线/50-03 数据初始化\u0026#39;, \u0026#39;50 系统上线/50-04 系统上线汇报材料\u0026#39;, \u0026#39;60 上线后运维\u0026#39;, \u0026#39;70 配置相关\u0026#39;, \u0026#39;80 数据清理/80-01 数据清理方案\u0026#39;, \u0026#39;80 数据清理/80-02 数据清理模板\u0026#39;, \u0026#39;80 数据清理/80-03 数据清理结果\u0026#39; ]; const rootPath = process.cwd(); folders.forEach(folder =\u0026gt; { const fullPath = path.join(rootPath, folder); fs.mkdirSync(fullPath, { recursive: true }); }); Update package.json\rIn the package.json file, add a bin field to use this script as a command-line tool.\n1 2 3 \u0026#34;bin\u0026#34;: { \u0026#34;create-folders\u0026#34;: \u0026#34;./createFolders.js\u0026#34; } Add #!/usr/bin/env node\rAt the top of the createFolders.js file, add #!/usr/bin/env node.\nThis line of code is a special comment called a shebang, which typically appears as the first line in script files on Unix-like systems.\nIt tells the operating system which interpreter to use to execute this script.\nIn this case, #!/usr/bin/env node means to use the Node.js interpreter from the environment to run this script.\nPublish locally using npm link\rUse the npm link command to publish the package globally (locally),\nmaking it easy to call directly from the command line.\n1 npm link Run the script (locally)\rCreate a new folder on the desktop, then enter the command in the command line\nAfter running it, the predefined folders will be generated.\n1 create-folders Publishing\rPublish the package you created to NPM. Here are the specific steps.\nCreate an NPM account\rNPM Official Website：https://www.npmjs.com\nLogin NPM\rEnter in the terminal npm login\nAdjust package.json\rname : The name of the package, which needs to be unique. version description main : The entry file. bin : The path to the executable command tool. Below is my package.json code.：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 { \u0026#34;name\u0026#34;: \u0026#34;gdhblog_folder_creator\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;Donghai Gong\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;A simple tool to create a predefined folder structure in the current directory.\u0026#34;, \u0026#34;bin\u0026#34;: { \u0026#34;create-folders\u0026#34;: \u0026#34;./createFolders.js\u0026#34; } } After adjusting the information in package.json, enter npm pack in the terminal to generate a .tgz file.\nPublish NPM\rEnter the code.\n1 npm publish Remark\rWhen publishing a package, choose between public or private:\nPublic(default) : npm publish Private: Add \u0026quot;private\u0026quot;: \u0026quot;true\u0026quot; in package.json Verification/Testing\rAfter a few minutes, you will be able to see it on NPM. Next, I will demonstrate how to use it.\nCreate and enter a folder\r1 2 3 mkdir Test_FolderCreator cd Test_FolderCreator Install\r1 npm i gdhblog_foldercreator npm: The package management tool for the Node.js platform, used to download, install, and manage JavaScript packages i(abbreviated form) or install(full form): The command to install packages with npm. gdhblog_foldercreator: The name of the npm package to be installed. Execute the command\rThis refers to the bin we configured earlier in the package.json file.\n","date":"2024-11-11T13:05:12+08:00","image":"http://localhost:1313/post/images/npm-logo.png","permalink":"http://localhost:1313/en/p/js-npm-introduction/","title":"NPM Introduction"},{"content":"Introduction\rPlugin Registration is used to register and manage plugins.\nIf you don\u0026rsquo;t want to install Plugin Registration separately, you can directly install and use it in XrmToolBox.\nInstallation Method 1\rAccess NuGet\rNuGet Gallery | Microsoft.CrmSdk.XrmTooling.PluginRegistrationTool 9.1.0.199\nDownload package\rChange the file extension of the downloaded archive\rRename the downloaded file to have a .zip extension, then extract it.\nThe Plugin Registration will be in the tool folder.\nInstallation Method 2\rCreate a Folder\rFor example：D:\\Dynamics_365_Development_Tools\\pluginsTool\nPowershell\rEnter PowerShell. D:\\Dynamics_365_Development_Tools\\pluginsTool\nRun the code\rRun the code first:\n1 2 3 4 5 6 [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 $sourceNugetExe = \u0026#34;https://dist.nuget.org/win-x86-commandline/latest/nuget.exe\u0026#34; $targetNugetExe = \u0026#34;.\\nuget.exe\u0026#34; Remove-Item .\\Tools -Force -Recurse -ErrorAction Ignore Invoke-WebRequest $sourceNugetExe -OutFile $targetNugetExe Set-Alias nuget $targetNugetExe -Scope Global -Verbose Run the code again:\n1 2 3 4 5 6 7 8 ## ##Download Plugin Registration Tool ## ./nuget install Microsoft.CrmSdk.XrmTooling.PluginRegistrationTool -O .\\Tools md .\\Tools\\PluginRegistration $prtFolder = Get-ChildItem ./Tools | Where-Object {$_.Name -match \u0026#39;Microsoft.CrmSdk.XrmTooling.PluginRegistrationTool.\u0026#39;} move .\\Tools\\$prtFolder\\tools\\*.* .\\Tools\\PluginRegistration Remove-Item .\\Tools\\$prtFolder -Force -Recurse Installation completed\rPowerShell Code\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 $sourceNugetExe = \u0026#34;https://dist.nuget.org/win-x86-commandline/latest/nuget.exe\u0026#34; $targetNugetExe = \u0026#34;.\\nuget.exe\u0026#34; Remove-Item .\\Tools -Force -Recurse -ErrorAction Ignore Invoke-WebRequest $sourceNugetExe -OutFile $targetNugetExe Set-Alias nuget $targetNugetExe -Scope Global -Verbose ## ##Download Plugin Registration Tool ## ./nuget install Microsoft.CrmSdk.XrmTooling.PluginRegistrationTool -O .\\Tools md .\\Tools\\PluginRegistration $prtFolder = Get-ChildItem ./Tools | Where-Object {$_.Name -match \u0026#39;Microsoft.CrmSdk.XrmTooling.PluginRegistrationTool.\u0026#39;} move .\\Tools\\$prtFolder\\tools\\*.* .\\Tools\\PluginRegistration Remove-Item .\\Tools\\$prtFolder -Force -Recurse ## ##Download CoreTools ## ./nuget install Microsoft.CrmSdk.CoreTools -O .\\Tools md .\\Tools\\CoreTools $coreToolsFolder = Get-ChildItem ./Tools | Where-Object {$_.Name -match \u0026#39;Microsoft.CrmSdk.CoreTools.\u0026#39;} move .\\Tools\\$coreToolsFolder\\content\\bin\\coretools\\*.* .\\Tools\\CoreTools Remove-Item .\\Tools\\$coreToolsFolder -Force -Recurse ## ##Download Configuration Migration ## ./nuget install Microsoft.CrmSdk.XrmTooling.ConfigurationMigration.Wpf -O .\\Tools md .\\Tools\\ConfigurationMigration $configMigFolder = Get-ChildItem ./Tools | Where-Object {$_.Name -match \u0026#39;Microsoft.CrmSdk.XrmTooling.ConfigurationMigration.Wpf.\u0026#39;} move .\\Tools\\$configMigFolder\\tools\\*.* .\\Tools\\ConfigurationMigration Remove-Item .\\Tools\\$configMigFolder -Force -Recurse ## ##Download Package Deployer ## ./nuget install Microsoft.CrmSdk.XrmTooling.PackageDeployment.WPF -O .\\Tools md .\\Tools\\PackageDeployment $pdFolder = Get-ChildItem ./Tools | Where-Object {$_.Name -match \u0026#39;Microsoft.CrmSdk.XrmTooling.PackageDeployment.Wpf.\u0026#39;} move .\\Tools\\$pdFolder\\tools\\*.* .\\Tools\\PackageDeployment Remove-Item .\\Tools\\$pdFolder -Force -Recurse ## ##Remove NuGet.exe ## Remove-Item nuget.exe ","date":"2024-10-16T22:55:51+08:00","image":"http://localhost:1313/post/images/dynamics-crm-logo.png","permalink":"http://localhost:1313/en/p/dynamics-crm-install-plugin-registration/","title":"Dynamics CRM - Install Plugin Registration Tool"},{"content":"I currently use the following three methods:\nObtain it through the Power Platform admin center.\nQuery using FetchXML.\nSQL.\nObtain it through the Power Platform admin center\rThrough the \u0026ldquo;Analytics\u0026rdquo; section of the Power Platform admin center.\nQuery using FetchXML\rThe FetchXML is as follows:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;fetch aggregate=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;entity name=\u0026#34;audit\u0026#34;\u0026gt; \u0026lt;attribute name=\u0026#34;createdon\u0026#34; alias=\u0026#34;LastLoginDate\u0026#34; aggregate=\u0026#34;max\u0026#34; /\u0026gt; \u0026lt;filter\u0026gt; \u0026lt;condition attribute=\u0026#34;operation\u0026#34; operator=\u0026#34;eq\u0026#34; value=\u0026#34;4\u0026#34; /\u0026gt; \u0026lt;/filter\u0026gt; \u0026lt;link-entity name=\u0026#34;systemuser\u0026#34; from=\u0026#34;systemuserid\u0026#34; to=\u0026#34;objectid\u0026#34; link-type=\u0026#34;inner\u0026#34; alias=\u0026#34;SystemUser\u0026#34;\u0026gt; \u0026lt;attribute name=\u0026#34;fullname\u0026#34; alias=\u0026#34;FullName\u0026#34; groupby=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;attribute name=\u0026#34;domainname\u0026#34; alias=\u0026#34;DomainName\u0026#34; groupby=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;attribute name=\u0026#34;isdisabled\u0026#34; alias=\u0026#34;IsDisabled\u0026#34; groupby=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;attribute name=\u0026#34;accessmode\u0026#34; alias=\u0026#34;AccessMode\u0026#34; groupby=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;attribute name=\u0026#34;userlicensetype\u0026#34; alias=\u0026#34;UserLicenseType\u0026#34; groupby=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;/link-entity\u0026gt; \u0026lt;/entity\u0026gt; \u0026lt;/fetch\u0026gt; Sample：\nSQL\rUse \u0026ldquo;SQL 4 CDS\u0026rdquo; in XrmToolBox for querying. The SQL is as follows:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 SELECT MAX(audit.createdon) AS LastLoginDate, SystemUser.fullname AS FullName, SystemUser.domainname AS DomainName, SystemUser.isdisabled AS IsDisabled, SystemUser.accessmode AS AccessMode, SystemUser.userlicensetype AS UserLicenseType FROM audit INNER JOIN systemuser AS SystemUser ON audit.objectid = SystemUser.systemuserid WHERE audit.operation = 4 GROUP BY SystemUser.fullname, SystemUser.domainname, SystemUser.isdisabled, SystemUser.accessmode, SystemUser.userlicensetype; Notes\rAuditing\rIf using Method 2 or Method 3, the \u0026ldquo;Auditing\u0026rdquo; feature must be enabled.\nOperation Choices/Options\rValue Text 1 Create 2 Update 3 Delete 4 Access 5 Upsert 115 Archive 116 Retain 117 RollbackRetain 118 Restore 200 CustomOperation ","date":"2024-10-15T14:55:51+08:00","image":"http://localhost:1313/post/images/dynamics-crm-logo.png","permalink":"http://localhost:1313/en/p/dynamics-crm-get-user-last-login-time/","title":"Dynamics CRM - Get user last login time"},{"content":"Check Access Speed\rAssuming your environment link is：[https://sample.dynamics.cn/main.aspx]\nAppend /tools/diagnostics/diag.aspx to the link, then visit:\n1 2 # Url sample https://sample.dynamics.cn/tools/diagnostics/diag.aspx After accessing it, you will see \u0026ldquo;Dynamics 365 Diagnostics\u0026rdquo;\nClick \u0026ldquo;Run,\u0026rdquo; and after a moment, the diagnostic results will appear.\n","date":"2024-10-15T12:55:51+08:00","image":"http://localhost:1313/post/images/dynamics-crm-logo.png","permalink":"http://localhost:1313/en/p/dynamics-crm-check-access-speed/","title":"Dynamics CRM - Check access speed"}]